name: CI/CD

on:
  push:
    branches:
      - development
      - "release-**"
      - azure
      
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }} #ID do projeto no GCP
  GKE_CLUSTER: vivid-nomad-358913-gke    # Nome do cluster GKE.
  GKE_ZONE: us-central1   # Zona do cluster GKE.
  DEPLOYMENT_NAME: convert-app # nome da aplicação.
  IMAGE: convert #nome da imagem
  ACR: ${{ secrets.REGISTRY_LOGIN_SERVER }}

jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v2

      - name: "Login to ACR"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      #- name: SonarCloud Scan
      #  uses: SonarSource/sonarcloud-github-action@master
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      #- name: SonarQube Quality Gate Check
      #  # You may pin to the exact commit or the version.
      #  # uses: SonarSource/sonarqube-quality-gate-action@15767f0e4eb489cfdd989dc717fa78c038d0de8a
      #  uses: SonarSource/sonarqube-quality-gate-action@v1.0.0
      #  with:
      #    # Location of the scanner metadata report file
      #    scanMetadataReportFile: .scannerwork/report-task.txt
      #  env:
      #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

        
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Build
        run: |-
          docker build \
            --tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/api-4hub-faas:${{ steps.date.outputs.date }} \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF"

            
      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "$ACR/$IMAGE:$GITHUB_RUN_ID"

          
          
  Deploy:
    runs-on: ubuntu-latest
    needs: build-docker    
    environment: development
    steps:
    
      - name: Logando no Azure para Deployment
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Azure WebApp
        uses: Azure/webapps-deploy@v2
        with:
          # Name of the Azure Web App
          app-name: $DEPLOYMENT_NAME
          images: "$ACR/$IMAGE:${{ steps.date.outputs.date }}-$GITHUB_RUN_ID" 
          
